diff -Naur newplugin/funcxy.c psl-funcxy/funcxy.c
--- newplugin/funcxy.c	1970-01-01 01:00:00.000000000 +0100
+++ psl-funcxy/funcxy.c	2013-03-29 19:11:16.886966000 +0100
@@ -0,0 +1,13 @@
+/*
+ * funcxy.c: A Plugin Shared Library for the Video Disk Recorder
+ *
+ * See the README file for copyright information and how to reach the author.
+ *
+ * $Id$
+ */
+
+#include "funcxy.h"
+
+namespace PslFuncXy {
+
+}; // namespace PslFuncXy
diff -Naur newplugin/funcxy.h psl-funcxy/funcxy.h
--- newplugin/funcxy.h	1970-01-01 01:00:00.000000000 +0100
+++ psl-funcxy/funcxy.h	2013-03-29 19:11:16.887966000 +0100
@@ -0,0 +1,21 @@
+/*
+ * funcxy.h: A Plugin Shared Library for the Video Disk Recorder
+ *
+ * See the README file for copyright information and how to reach the author.
+ *
+ * $Id$
+ */
+
+#ifndef funcxy_INCLUDED
+#define funcxy_INCLUDED
+
+
+#define PSL_funcxy_VER_NUM 00001
+#define PSL_funcxy_VERSION "0.0.1"
+
+namespace PslFuncXy {
+
+
+}; // namespace PslFuncXy
+
+#endif
diff -Naur newplugin/HISTORY psl-funcxy/HISTORY
--- newplugin/HISTORY	2013-03-29 19:02:31.000000000 +0100
+++ psl-funcxy/HISTORY	2013-03-29 19:11:16.883966000 +0100
@@ -1,5 +1,5 @@
-VDR Plugin 'newplugin' Revision History
----------------------------------------
+VDR Plugin Shared Library 'funcxy' Revision History
+---------------------------------------------
 
 2013-03-29: Version 0.0.1
 
diff -Naur newplugin/include/psl-funcxy.h psl-funcxy/include/psl-funcxy.h
--- newplugin/include/psl-funcxy.h	1970-01-01 01:00:00.000000000 +0100
+++ psl-funcxy/include/psl-funcxy.h	2013-03-30 08:59:21.626073000 +0100
@@ -0,0 +1,17 @@
+/*
+ * psl-funcxy.h: A Plugin Shared Library for the Video Disk Recorder
+ *
+ * See the README file for copyright information and how to reach the author.
+ *
+ * $Id$
+ */
+
+#ifndef PSL_funcxy_INCLUDED
+#define PSL_funcxy_INCLUDED
+
+
+// export whatever needed by your consumers, note the quotes "":
+#include "psl-funcxy/funcxy.h"
+#include "psl-funcxy/object_1.h"
+
+#endif
diff -Naur newplugin/Makefile psl-funcxy/Makefile
--- newplugin/Makefile	2013-03-29 19:02:31.000000000 +0100
+++ psl-funcxy/Makefile	2013-03-30 12:00:34.232073000 +0100
@@ -7,11 +7,11 @@
 # This name will be used in the '-P...' option of VDR to load the plugin.
 # By default the main source file also carries this name.
 
-PLUGIN = newplugin
+PLUGIN = funcxy
 
-### The version number of this plugin (taken from the main source file):
+### The version number of this PSL (taken from the export header):
 
-VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')
+VERSION = $(shell grep '\#define PSL_$(PLUGIN)_VERSION ' $(PLUGIN).h | cut -d' ' -f3 | sed -e 's/[";]//g')
 
 ### The directory environment:
 
@@ -22,6 +22,9 @@
 PLGCFG = $(call PKGCFG,plgcfg)
 #
 TMPDIR ?= /tmp
+PREFIX ?= /usr
+INCDIR ?= $(PREFIX)/include
+PCDIR ?= $(PREFIX)/lib/pkgconfig
 
 ### The compiler options:
 
@@ -38,12 +41,12 @@
 
 ### The name of the distribution archive:
 
-ARCHIVE = $(PLUGIN)-$(VERSION)
+ARCHIVE = psl-$(PLUGIN)-$(VERSION)
 PACKAGE = vdr-$(ARCHIVE)
 
 ### The name of the shared object file:
 
-SOFILE = libvdr-$(PLUGIN).so
+SOFILE = libpsl-$(PLUGIN)
 
 ### Includes and Defines (add further entries here):
 
@@ -51,9 +54,13 @@
 
 DEFINES += -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
 
+### Additional libraries to link against, put them in LIBSPSL for they will then also be exported in the pc file:
+LIBSPSL =
+LIBS += $(LIBSPSL)
+
 ### The object files (add further files here):
 
-OBJS = $(PLUGIN).o
+OBJS = $(PLUGIN).o object_1.o
 
 ### The main target:
 
@@ -99,15 +106,48 @@
 
 install-i18n: $(I18Nmsgs)
 
+# generate pkg-config file:
+
+pc-file: vdr-psl-$(PLUGIN).pc
+
+.PHONY: vdr-psl-$(PLUGIN).pc
+vdr-psl-$(PLUGIN).pc:
+	@echo "Name: psl-$(PLUGIN)" > $@
+	@echo "Description: VDR Plugin Shared Library for functionality suggested by $(PLUGIN) (replace with your description) ;-)" >> $@
+	@echo "URL: http://www.tvdr.de/" >> $@
+	@echo "Version: $(VERSION)" >> $@
+	@echo "Apiversion=$(VERSION)" >> $@
+	@echo "" >> $@
+	@echo "Requires:" >> $@
+	@echo "Requires.private:" >> $@
+	@echo "Libs=-lpsl-$(PLUGIN).$(APIVERSION)" >> $@
+	@echo "Libs.private=$(LIBSPSL)" >> $@
+	@echo "ldflags=-Wl,-L$(LIBDIR) -Wl,-rpath=$(LIBDIR)" >> $@
+
 ### Targets:
 
 $(SOFILE): $(OBJS)
-	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) -o $@
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) $(LIBS) -o $@
 
 install-lib: $(SOFILE)
-	install -D $^ $(DESTDIR)$(LIBDIR)/$^.$(APIVERSION)
+	install -D $^ $(DESTDIR)$(LIBDIR)/$^.$(APIVERSION).so
+
+# install pkg-config file:
+
+install-pc: pc-file
+	if [ -n "$(PCDIR)" ] ; then\
+	   mkdir -p $(DESTDIR)$(PCDIR) ;\
+	   cp vdr-psl-$(PLUGIN).pc $(DESTDIR)$(PCDIR) ;\
+	   fi
+
+# install headers:
+
+install-includes:
+	@mkdir -p $(DESTDIR)$(INCDIR)/vdr/psl-$(PLUGIN)
+	@cp -pLR *.h $(DESTDIR)$(INCDIR)/vdr/psl-$(PLUGIN)
+	@cp -pLR include/psl-$(PLUGIN).h $(DESTDIR)$(INCDIR)/vdr
 
-install: install-lib install-i18n
+install: install-lib install-i18n install-pc install-includes
 
 dist: $(I18Npo) clean
 	@-rm -rf $(TMPDIR)/$(ARCHIVE)
@@ -119,4 +159,4 @@
 
 clean:
 	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
-	@-rm -f $(OBJS) $(DEPFILE) *.so *.tgz core* *~
+	@-rm -f $(OBJS) $(DEPFILE) $(SOFILE) vdr-psl-$(PLUGIN).pc *.tgz core* *~
diff -Naur newplugin/newplugin.c psl-funcxy/newplugin.c
--- newplugin/newplugin.c	2013-03-29 19:02:31.000000000 +0100
+++ psl-funcxy/newplugin.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,141 +0,0 @@
-/*
- * newplugin.c: A plugin for the Video Disk Recorder
- *
- * See the README file for copyright information and how to reach the author.
- *
- * $Id$
- */
-
-#include <vdr/plugin.h>
-
-static const char *VERSION        = "0.0.1";
-static const char *DESCRIPTION    = "Enter description for 'newplugin' plugin";
-static const char *MAINMENUENTRY  = "Newplugin";
-
-class cPluginNewplugin : public cPlugin {
-private:
-  // Add any member variables or functions you may need here.
-public:
-  cPluginNewplugin(void);
-  virtual ~cPluginNewplugin();
-  virtual const char *Version(void) { return VERSION; }
-  virtual const char *Description(void) { return DESCRIPTION; }
-  virtual const char *CommandLineHelp(void);
-  virtual bool ProcessArgs(int argc, char *argv[]);
-  virtual bool Initialize(void);
-  virtual bool Start(void);
-  virtual void Stop(void);
-  virtual void Housekeeping(void);
-  virtual void MainThreadHook(void);
-  virtual cString Active(void);
-  virtual time_t WakeupTime(void);
-  virtual const char *MainMenuEntry(void) { return MAINMENUENTRY; }
-  virtual cOsdObject *MainMenuAction(void);
-  virtual cMenuSetupPage *SetupMenu(void);
-  virtual bool SetupParse(const char *Name, const char *Value);
-  virtual bool Service(const char *Id, void *Data = NULL);
-  virtual const char **SVDRPHelpPages(void);
-  virtual cString SVDRPCommand(const char *Command, const char *Option, int &ReplyCode);
-  };
-
-cPluginNewplugin::cPluginNewplugin(void)
-{
-  // Initialize any member variables here.
-  // DON'T DO ANYTHING ELSE THAT MAY HAVE SIDE EFFECTS, REQUIRE GLOBAL
-  // VDR OBJECTS TO EXIST OR PRODUCE ANY OUTPUT!
-}
-
-cPluginNewplugin::~cPluginNewplugin()
-{
-  // Clean up after yourself!
-}
-
-const char *cPluginNewplugin::CommandLineHelp(void)
-{
-  // Return a string that describes all known command line options.
-  return NULL;
-}
-
-bool cPluginNewplugin::ProcessArgs(int argc, char *argv[])
-{
-  // Implement command line argument processing here if applicable.
-  return true;
-}
-
-bool cPluginNewplugin::Initialize(void)
-{
-  // Initialize any background activities the plugin shall perform.
-  return true;
-}
-
-bool cPluginNewplugin::Start(void)
-{
-  // Start any background activities the plugin shall perform.
-  return true;
-}
-
-void cPluginNewplugin::Stop(void)
-{
-  // Stop any background activities the plugin is performing.
-}
-
-void cPluginNewplugin::Housekeeping(void)
-{
-  // Perform any cleanup or other regular tasks.
-}
-
-void cPluginNewplugin::MainThreadHook(void)
-{
-  // Perform actions in the context of the main program thread.
-  // WARNING: Use with great care - see PLUGINS.html!
-}
-
-cString cPluginNewplugin::Active(void)
-{
-  // Return a message string if shutdown should be postponed
-  return NULL;
-}
-
-time_t cPluginNewplugin::WakeupTime(void)
-{
-  // Return custom wakeup time for shutdown script
-  return 0;
-}
-
-cOsdObject *cPluginNewplugin::MainMenuAction(void)
-{
-  // Perform the action when selected from the main VDR menu.
-  return NULL;
-}
-
-cMenuSetupPage *cPluginNewplugin::SetupMenu(void)
-{
-  // Return a setup menu in case the plugin supports one.
-  return NULL;
-}
-
-bool cPluginNewplugin::SetupParse(const char *Name, const char *Value)
-{
-  // Parse your own setup parameters and store their values.
-  return false;
-}
-
-bool cPluginNewplugin::Service(const char *Id, void *Data)
-{
-  // Handle custom service requests from other plugins
-  return false;
-}
-
-const char **cPluginNewplugin::SVDRPHelpPages(void)
-{
-  // Return help text for SVDRP commands this plugin implements
-  return NULL;
-}
-
-cString cPluginNewplugin::SVDRPCommand(const char *Command, const char *Option, int &ReplyCode)
-{
-  // Process SVDRP commands this plugin implements
-  return NULL;
-}
-
-VDRPLUGINCREATOR(cPluginNewplugin); // Don't touch this!
diff -Naur newplugin/object_1.c psl-funcxy/object_1.c
--- newplugin/object_1.c	1970-01-01 01:00:00.000000000 +0100
+++ psl-funcxy/object_1.c	2013-03-30 11:59:57.901073000 +0100
@@ -0,0 +1,22 @@
+/*
+ * object_1.c: A Plugin Shared Library for the Video Disk Recorder
+ *
+ * See the README file for copyright information and how to reach the author.
+ *
+ * $Id$
+ */
+
+#include "object_1.h"
+
+namespace PslFuncXy {
+
+cMyClass::cMyClass()
+{
+    nValue = 0;
+}
+
+cMyClass::~cMyClass()
+{
+}
+
+}; // namespace PslFuncXy
diff -Naur newplugin/object_1.h psl-funcxy/object_1.h
--- newplugin/object_1.h	1970-01-01 01:00:00.000000000 +0100
+++ psl-funcxy/object_1.h	2013-03-29 19:11:16.885966000 +0100
@@ -0,0 +1,25 @@
+/*
+ * object_1.h: A Plugin Shared Library for the Video Disk Recorder
+ *
+ * See the README file for copyright information and how to reach the author.
+ *
+ * $Id$
+ */
+
+
+#ifndef PSL_funcxy_HEADER_1_INCLUDED
+#define PSL_funcxy_HEADER_1_INCLUDED
+
+namespace PslFuncXy {
+
+class cMyClass
+{
+public:
+    cMyClass();
+    ~cMyClass();
+    int nValue;
+};
+
+}; // namespace PslFuncXy
+
+#endif
diff -Naur newplugin/README psl-funcxy/README
--- newplugin/README	2013-03-29 19:02:31.000000000 +0100
+++ psl-funcxy/README	2013-03-29 19:11:16.886966000 +0100
@@ -1,4 +1,4 @@
-This is a "plugin" for the Video Disk Recorder (VDR).
+This is a "Plugin Shared Library" used in common by plugins for the Video Disk Recorder (VDR).
 
 Written by:                  Your Name <email@host.dom>
 
